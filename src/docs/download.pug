include _mixins.pug

+page("download")
  p
    | Download the latest version here —
    =' '
    a(href="css/awsm.css") awsm.css
    | .

  p
    | Minified —
    = ' '
    a(href="css/awsm.min.css") awsm.min.css
    = ' '
    | (≈3 Kb after gzip).

  p
    | You also can
    = ' '
    a(href="https://github.com/igoradamenko/awsm.css/archive/master.zip") download tarball of the project
    | .

  section
    +h("sealed") Sealed

    p
      | If you want to to use awsm.css inside any other projects without any side effects,
      | just download “sealed” version that applies styles to
      = ' '
      code .awsm
      = ' '
      | selector, without changing global namespace.

    p Here it is:
      = ' '
      a(href="css/awsm_sealed.css") awsm_sealed.css
      = ', '
      a(href="css/awsm_sealed.min.css") awsm_sealed.min.css
      | .

  section
    +h("themes") Themes

    p Here is a list of all available themes:

    dl
      each theme in locals.themes
        dt
          span(style=`background: linear-gradient(to right, ${theme.colors.primary} 0%, ${theme.colors.primary} 50%, ${theme.colors.secondary} 50%, ${theme.colors.secondary} 100%); display: inline-block; width: .75rem; height: .75rem; border-radius: 50%; border: 1px solid ${theme.colors.stealthy};`)
          = ' '
          | #{theme.title}

        dd
          p #{theme.description}

          p
            a(href=`css/awsm_theme_${theme.title}.css`) Original
            = ' ('
            a(href=`css/awsm_theme_${theme.title}.min.css`) min
            = '), '
            a(href=`css/awsm_theme_${theme.title}._sealed.css`) sealed
            = ' ('
            a(href=`css/awsm_theme_${theme.title}._sealed.min.css`) min
            = ').'

    section
      +h("dark-mode", 3) Dark Mode Support

      p If you need a “Dark Mode” support, just inject two CSS files and use media queries:

      -
        var code = '<!-- CSS for users with dark mode -->\n'
          + '<link rel="stylesheet" href="awsm_theme_big-stone.min.css" media="(prefers-color-scheme: dark)">\n'
          + '\n'
          + '<!-- CSS for users without dark mode -->\n'
          + '<link rel="stylesheet" href="awsm_theme_pearl-lusta.min.css" media="(prefers-color-scheme: no-preference), (prefers-color-scheme: light)">';

      +code-block= code

      p
        | (See
        = ' '
        a(href="https://github.com/igoradamenko/awsm.css/issues/103") #103
        = ' '
        | for other solutions.)

  section
    +h("unpkg") unpkg

    p You can use unpkg for link latest or exact version of the library:

    +code-block &lt;link rel="stylesheet" href="https://unpkg.com/awsm.css/dist/awsm.min.css"&gt;

    p All themes are available there too:

    +code-block &lt;link rel="stylesheet" href="https://unpkg.com/awsm.css/dist/awsm_theme_#{locals.themes[3].title}.min.css"&gt;

    p
      | Get more information about the unpkg
      = ' '
      abbr(title="A content delivery network or content distribution network is a globally distributed network of proxy servers deployed in multiple data centers.") CDN
      = ' on '
      a(
        href="https://unpkg.com/",
        title="unpkg is a fast, global content delivery network for stuff that is published to npm",
        target="_blank"
      ) unpkg.com
      | .

  section
    +h("postcss") PostCSS API

    p
      | If you install
      = ' '
      a(
        href="https://www.npmjs.com/package/awsm.css",
        title="awsm.css in npm registry",
        target="_blank"
      ) npm package
      | , you can use library as PostCSS plugin:

    -
      var code = 'const postcss = require(\'postcss\');\n' +
      'const awsm = require(\'awsm.css\');\n' +
      '\n' +
      'postcss([awsm({ theme: \'tasman\', sealed: true })])\n' +
      '  .process(\'a {color: red}\')\n' +
      '  .then(result => {\n' +
      '    console.log(result.css); // awsm.css prepends your CSS \n' +
      '  });'

    +code-block= code

    section
      +h("options", 3) Options

      dl
        dt
          var theme
        dd
          | Defines theme to inject.
          br
          em
            | Default:
            = ' '
            code white
            | .

        dt
          var sealed
        dd
          | When set to
          = ' '
          code true
          = ', '
          | styles are wrapped by
          = ' '
          code .awsm
          = ' '
          | selector. Useful when you don't want awsm.css to change global namespace.
          br
          em
            | Default:
            = ' '
            code false
            | .

  section
    +h("license") License

    p
      | awsm.css licensed under
      = ' '
      a(href="http://en.wikipedia.org/wiki/MIT_License") the MIT
      | .

    p
      | The MIT License places almost no restrictions on what you can do with this lib.
      | You are free to use it in commercial projects as long as the copyright is left intact.

  section
    +h("credits") Credits

    p
      | Thanks to
      = ' '
      a(
        href="https://www.instagram.com/xnmlsx/",
        title="@xnmlsx in Instagram",
        target="_blank"
      ) Anastasia Medvedeva
      = ' '
      | for photo & video used in examples, and for themes
      = ' '
      a(
        href="https://www.instagram.com/cake4am/",
        title="@cake4am in Instagram",
        target="_blank"
      ) inspiration
      | .
